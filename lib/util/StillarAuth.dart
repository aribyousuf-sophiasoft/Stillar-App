import 'dart:async';import 'dart:convert';import 'package:http/http.dart' as http;import 'package:chat_app/models/user.dart';class StillarAuth {  static const _serviceBaseUrl = 'http://192.168.0.113:84/ServiceContracts/';  static final _headers = {'Content-Type': 'application/json'};  static Future<CustomerLoginResult> signInWithEmailAndPassword(      String email, String password) async {    print("signInWithEmailAndPassword() called");    String signInURL = _serviceBaseUrl + 'CustomerAccount.svc/CustomerLogin';    var resBody = {};    resBody["Email"] = email;    resBody["Password"] = password;    var login = {};    login["login"] = resBody;    try {      final response = await http.post(signInURL,          headers: _headers, body: jsonEncode(login));      print("Response Status: ${response.statusCode}");      print("Response Body: ${response.body}");      print("Response Headers: ${response.headers}");      Map<String, String> headers = response.headers;      String userID = headers['set-cookie'];      if (response.statusCode == 200) {        // If server returns an OK response, parse the JSON.        return CustomerLoginResult.fromJson(json.decode(response.body), userID);      } else {        // If that response was not OK, throw an error.        throw Exception('Failed to load post');      }    } catch (e) {      print(e);      return null;    }  }  static Future<CustomerSignUpResult> signUp( String firstName, String lastName,      String email,String mobileNumber, String password) async {    print("signUp() called");    String signInURL = _serviceBaseUrl + 'CustomerAccount.svc/CustomerSignUp';    var resBody = {};    resBody["FirstName"] = firstName;    resBody["LastName"] = lastName;    resBody["EmailAddress"]=email;    resBody["MobileNumber"]=mobileNumber;    resBody["Password"]=password;    var login = {};    login["customer"] = resBody;    try {      final response = await http.post(signInURL,          headers: _headers, body: jsonEncode(login));      Map<String, String> headers = response.headers;      String userID = headers['set-cookie'];      if (response.statusCode == 200) {        // If server returns an OK response, parse the JSON.        return CustomerSignUpResult.fromJson(json.decode(response.body));      } else {        throw Exception(json.decode(response.body).Details);      }    } catch (e) {      return null;    }  }  static Future<GetCustomerProfileResult> getUserProfile(String token, String userId) async {    print("getUserProfile() called");    String extendedURL = _serviceBaseUrl + 'CustomerAccount.svc/GetCustomerProfile';    /*Map<String, String> requestHeaders = {      'Content-type': 'application/json',      'Accept': 'application/json',      'Authorization': '<Your token>'    };*/    Map<String, String> requestHeaders = {'Token': token, 'Cookie': userId};    print("headers: $requestHeaders");    try {      final response = await http.get(extendedURL, headers: requestHeaders);      print("Response Status: ${response.statusCode}");      print("Response Body: ${response.body}");      if (response.statusCode == 200) {        // If server returns an OK response, parse the JSON.        GetCustomerProfileResult result = GetCustomerProfileResult.fromJson(json.decode(response.body));        if (result.statusCode == '401') {          throw Exception('Authorization Failed');        } else {          return result;        }      } else {        // If that response was not OK, throw an error.        throw Exception('Failed to load get');      }    } catch (e) {      print(e);      return null;    }  }}